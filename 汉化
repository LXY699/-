-- 汉化脚本
-- 自动生成的汉化脚本

local Translations = {["Misc"] = "杂项",
    ["Gun Mods"] = "枪械修改",
    ["Teleports"] = "传送",
    ["Player Settings"] = "玩家设置",
    ["GUI Settings"] = "界面设置",
    ["Information"] = "信息"
    ["FARM KILLS"] = "刷击杀",
    ["ESP Kill Guns"] = "枪械高亮显示",
    ["ESP"] = "玩家高亮显示",
    ["Fake INF Rebirths"] = "伪造无限重生",
    ["Fake INF Kills"] = "伪造无限击杀",
    ["INF Ammo"] = "无限子弹",
    ["Make Ur Gun Auto"] = "枪械全自动",
    ["Rapid Fire"] = "快速射击",
    ["No Recoil"] = "无后坐",
    ["One Hit"] = "一击秒杀",
    ["INF Range"] = "无限射程",
    ["Instant Reload"] = "秒换弹",
    ["Super Bullet Speed"] = "子弹速度变快",
    ["Big Ammo"] = "子弹变大",
    ["Open All"] = "全部开启（散弹子弹-爆炸子弹-子弹变大除外）",
    ["Make Ur Gun Explosive"] = "子弹带爆炸效果",
    ["Make Ur Gun Shotgun"] = "子弹带散弹效果",
    ["Equip All Guns"] = "装备所有枪械",
    ["Instant E Button"] = "快速交互键（E 键）",
    ["Get Starter Pistol"] = "获取初始手枪（需要0击杀）",
    ["Get UZI"] = "获取乌兹冲锋枪（需要5次击杀）",
    ["Get Remington Shotgun"] = "获取雷明顿霰弹枪（需要15次击杀）",
    ["Get Ruger"] = "获取鲁格手枪（需要50次击杀）",
    ["Get AK47"] = "获取AK47（需要70次击杀）",
    ["Get M16A2"] = "获取M16A2（需要90次击杀）",
    ["Get Heckler Sniper"] = "获取Heckler狙击枪（需要100次击杀）",
    ["Get Bazooka"] = "获取火箭筒（需要150次击杀）",
    ["Get Ice Generator"] = "获取冰生成器（需要200次击杀）",
    ["Spawn"] = "出生点",
    ["Lobby"] = "大厅",
    ["Cyborg Boss"] = "赛博格boss",
    ["Mad Killer Boss"] = "疯狂杀手boss",
    ["Map Skeleton"] = "地图骨架",
    ["Robloxia Town"] = "罗布乐思镇",
    ["Click This"] = "点击这里（如果上帝模式失效点击这里修复上帝模式）",
    ["Make God Mode NO DAMAGE"] = "设置上帝模式（免疫伤害）",
    ["Get Guns"] = "获取枪械",
    ["God Mode"] = "上帝模式",
    ["Super Speed"] = "速度变超快（死亡重置）",
    ["Super Jump"] = "跳跃跳的超高（死亡重置）",
    ["Interface"] = "界面",
    ["Theme"] = "主题",
    ["Transparency"] = "透明度",
    ["Minimize Bind"] = "最小化按键绑定",
    ["Config name"] = "配置名称",
    ["Config list"] = "配置列表",
    ["Create config"] = "创建配置",
    ["Load config"] = "加载配置",
    ["Overwrite config"] = "覆盖配置",
    ["Refresh list"] = "刷新列表",
    ["Set as autoload"] = "设置自动加载",
    }

local function translateText(text)
    if not text or type(text) ~= "string" then return text end
    
    if Translations[text] then
        return Translations[text]
    end
    
    for en, cn in pairs(Translations) do
        if text:find(en) then
            return text:gsub(en, cn)
        end
    end
    
    return text
end

local function setupTranslationEngine()
    local success, err = pcall(function()
        local oldIndex = getrawmetatable(game).__newindex
        setreadonly(getrawmetatable(game), false)
        
        getrawmetatable(game).__newindex = newcclosure(function(t, k, v)
            if (t:IsA("TextLabel") or t:IsA("TextButton") or t:IsA("TextBox")) and k == "Text" then
                v = translateText(tostring(v))
            end
            return oldIndex(t, k, v)
        end)
        
        setreadonly(getrawmetatable(game), true)
    end)
    
    if not success then
        warn("元表劫持失败:", err)
       
        local translated = {}
        local function scanAndTranslate()
            for _, gui in ipairs(game:GetService("CoreGui"):GetDescendants()) do
                if (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) and not translated[gui] then
                    pcall(function()
                        local text = gui.Text
                        if text and text ~= "" then
                            local translatedText = translateText(text)
                            if translatedText ~= text then
                                gui.Text = translatedText
                                translated[gui] = true
                            end
                        end
                    end)
                end
            end
            
            local player = game:GetService("Players").LocalPlayer
            if player and player:FindFirstChild("PlayerGui") then
                for _, gui in ipairs(player.PlayerGui:GetDescendants()) do
                    if (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) and not translated[gui] then
                        pcall(function()
                            local text = gui.Text
                            if text and text ~= "" then
                                local translatedText = translateText(text)
                                if translatedText ~= text then
                                    gui.Text = translatedText
                                    translated[gui] = true
                                end
                            end
                        end)
                    end
                end
            end
        end
        
        local function setupDescendantListener(parent)
            parent.DescendantAdded:Connect(function(descendant)
                if descendant:IsA("TextLabel") or descendant:IsA("TextButton") or descendant:IsA("TextBox") then
                    task.wait(0.1)
                    pcall(function()
                        local text = descendant.Text
                        if text and text ~= "" then
                            local translatedText = translateText(text)
                            if translatedText ~= text then
                                descendant.Text = translatedText
                            end
                        end
                    end)
                end
            end)
        end
        
        pcall(setupDescendantListener, game:GetService("CoreGui"))
        local player = game:GetService("Players").LocalPlayer
        if player and player:FindFirstChild("PlayerGui") then
            pcall(setupDescendantListener, player.PlayerGui)
        end
        
        while true do
            scanAndTranslate()
            task.wait(3)
        end
    end
end

task.wait(2)

setupTranslationEngine()

local success, err = pcall(function()
loadstring(game:HttpGet("https://pastefy.app/iMvROasz/raw"))()
end)

if not success then
    warn("加载失败:", err)
end
